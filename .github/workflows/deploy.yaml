name: "Deploy"

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

permissions:
  id-token: write

concurrency:
  group: terraform

jobs:
  plan:
    runs-on: nixos-x86_64-linux
    outputs:
      diff: ${{ steps.plan.outputs.diff }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          components: api-token,attic,ssh,gpg,aws,aliyun,devshell
          api-token: ${{ secrets.GITHUB_TOKEN }}
          attic-token: ${{ secrets.ATTIC_TOKEN }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          gpg-keys: EE55F605B6FAE752
          aws-role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aliyun-role-to-assume: ${{ vars.ALIYUN_ROLE_TO_ASSUME }}
          aliyun-oidc-provider-arn: ${{ vars.ALIYUN_OIDC_PROVIDER_ARN }}
      - uses: ./.github/actions/terragrunt-plan
        id: plan

  apply:
    runs-on: nixos-x86_64-linux
    environment: infrastructure
    needs: plan
    if: needs.plan.outputs.diff == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          components: api-token,attic,ssh,aws,aliyun,devshell
          api-token: ${{ secrets.GITHUB_TOKEN }}
          attic-token: ${{ secrets.ATTIC_TOKEN }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          aws-role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aliyun-role-to-assume: ${{ vars.ALIYUN_ROLE_TO_ASSUME }}
          aliyun-oidc-provider-arn: ${{ vars.ALIYUN_OIDC_PROVIDER_ARN }}
      - uses: ./.github/actions/terragrunt-apply
      - uses: ./.github/actions/create-pull-request
        if: always()
        with:
          branch: chore/auto-generated
          token: ${{ secrets.GH_TOKEN_FOR_UPDATES }}
