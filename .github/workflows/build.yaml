name: "Build and Plan"

on:
  pull_request:
    branches:
      - "master"
  workflow_dispatch:

jobs:
  build:
    runs-on: nixos-x86_64-linux
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          components: api-token,attic,devshell
          api-token: ${{ secrets.GITHUB_TOKEN }}
          attic-token: ${{ secrets.ATTIC_TOKEN }}
      # FIXME: error: cannot build '/nix/store/...^out' during evaluation
      # because the option 'allow-import-from-derivation' is disabled
      # - run: nix flake show --all-systems
      - name: Build with nix-fast-build
        run: |
          nix-fast-build --attic-cache default --skip-cached --no-download \
            --no-nom -j 4 --eval-workers 4 --flake .#checks.x86_64-linux

  lint:
    runs-on: nixos-x86_64-linux
    permissions:
      id-token: write # for AWS and Aliyun OIDC federation
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          components: api-token,attic,aws,devshell,terraform-cache
          api-token: ${{ secrets.GITHUB_TOKEN }}
          aws-role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          attic-token: ${{ secrets.ATTIC_TOKEN }}
      - run: terragrunt run-all validate
        working-directory: terraform
        env:
          TG_QUEUE_EXCLUDE_DIR: ""

  plan:
    runs-on: nixos-x86_64-linux
    concurrency:
      group: terraform
    permissions:
      id-token: write # for AWS and Aliyun OIDC federation
      pull-requests: write # for updating the PR comment
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          components: api-token,attic,ssh,aws,aliyun,devshell,terraform-cache
          api-token: ${{ secrets.GITHUB_TOKEN }}
          attic-token: ${{ secrets.ATTIC_TOKEN }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          aws-role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aliyun-role-to-assume: ${{ vars.ALIYUN_ROLE_TO_ASSUME }}
          aliyun-oidc-provider-arn: ${{ vars.ALIYUN_OIDC_PROVIDER_ARN }}
      - uses: ./.github/actions/terragrunt-plan
        id: plan
        with:
          skip-upload: "true"
      # Update the comment
      - uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: "### Terragrunt Plan"
      - uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Terragrunt Plan :memo:

            ```text
            ${{ steps.plan.outputs.plan }}
            ```

            **Status**: ${{ steps.plan.outputs.diff == 'true' && 'out of sync :warning:' || 'no changes :ok_hand:' }}
          token: ${{ secrets.GITHUB_TOKEN }}
          edit-mode: replace
